{"version":3,"file":"/home/walmir/ProjetosExtras/loldesign-back/src/controllers/callController.ts","sources":["/home/walmir/ProjetosExtras/loldesign-back/src/controllers/callController.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,yDAAkD;AAClD,oDAA6C;AAE7C,MAAqB,cAAc;IACxB,MAAM,CAAO,MAAM,CAAE,GAAY,EAAC,GAAa;;YAClD,IAAI;gBACA,MAAM,OAAO,GAAG,MAAM,qBAAW,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACnD,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAEvD;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,YAAY,CAAC;qBACnC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;aACpC;QACL,CAAC;KAAA;IAEM,MAAM,CAAO,IAAI,CAAE,GAAY,EAAC,GAAa;;YAChD,IAAI;gBACA,MAAM,KAAK,GAAG,MAAM,qBAAW,CAAC,IAAI,EAAE,CAAC;gBACvC,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAChD;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,YAAY,CAAC;qBACnC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;aACpC;QACL,CAAC;KAAA;IAEM,MAAM,CAAO,OAAO,CAAC,GAAY,EAAC,GAAa;;YAClD,IAAI;gBACA,MAAM,EAAC,EAAE,EAAC,GAAG,GAAG,CAAC,MAAM,CAAC;gBACxB,MAAM,KAAK,GAAG,MAAM,qBAAW,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;gBAC7C,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAEhD;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,YAAY,CAAC;qBACnC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;aACpC;QACL,CAAC;KAAA;IAEM,MAAM,CAAO,MAAM,CAAE,GAAY,EAAC,GAAa;;YAClD,IAAI;gBACA,MAAM,EAAC,EAAE,EAAC,GAAG,GAAG,CAAC,IAAI,CAAC;gBACtB,MAAM,EAAC,EAAE,EAAE,MAAM,EAAC,GAAG,GAAG,CAAC,MAAM,CAAA;gBAC/B,MAAM,KAAK,GAAG,MAAM,qBAAW,CAAC,MAAM,CAAC,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC;gBACnD,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;aAE/C;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,YAAY,CAAC;qBACnC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;aACpC;QACT,CAAC;KAAA;CACA;AA9CD,iCA8CC","sourcesContent":["import { Request, Response } from 'express';\nimport CallService from '../services/callService';\nimport StatusCode from '../Utils/StatusCode';\n\nexport default class CallController {\n    public static async create (req: Request,res: Response): Promise<typeof res>  {\n        try {\n            const newCall = await CallService.create(req.body);\n            return res.status(StatusCode.CREATED).json(newCall);\n            \n        } catch (err) {\n            return res.status(StatusCode.UNAUTHORIZED)\n                  .json({ error: `${err}` });\n        }\n    }\n\n    public static async read (req: Request,res: Response): Promise<typeof res> {\n        try {\n            const calls = await CallService.read();\n            return res.status(StatusCode.OK).json(calls);\n        } catch (err) {\n            return res.status(StatusCode.UNAUTHORIZED)\n                  .json({ error: `${err}` });\n        }\n    }\n\n    public static async getById(req: Request,res: Response): Promise<typeof res> {\n        try {\n            const {id} = req.params;\n            const calls = await CallService.getById(+id);\n            return res.status(StatusCode.OK).json(calls);\n            \n        } catch (err) {\n            return res.status(StatusCode.UNAUTHORIZED)\n                  .json({ error: `${err}` });\n        }\n    }\n\n    public static async delete (req: Request,res: Response): Promise<typeof res> {\n        try {\n            const {id} = req.body;\n            const {id: callId} = req.params\n            const calls = await CallService.delete(+callId,id);\n            return res.status(StatusCode.OK).json(calls)\n            \n        } catch (err) {\n            return res.status(StatusCode.UNAUTHORIZED)\n                  .json({ error: `${err}` });\n        }\n}\n}"]}