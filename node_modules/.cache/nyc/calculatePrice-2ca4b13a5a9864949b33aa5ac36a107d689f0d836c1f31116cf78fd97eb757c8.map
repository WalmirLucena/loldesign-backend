{"version":3,"file":"/home/walmir/ProjetosExtras/loldesign-back/src/Utils/calculatePrice.ts","sources":["/home/walmir/ProjetosExtras/loldesign-back/src/Utils/calculatePrice.ts"],"names":[],"mappings":";;;AAEA,MAAM,iBAAiB,GAAG,CAAE,IAAW,EAAE,IAAW,EAAE,EAAE;IACpD,IAAI,cAAc,GAAG,IAAI,GAAG,IAAI,CAAC;IACjC,IAAG,cAAc,IAAI,CAAC;QAAE,OAAO,EAAE,cAAc,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC,CAAA;SACzD;QACL,OAAO,EAAC,cAAc,EAAE,MAAM,EAAE,GAAG,EAAC,CAAA;KACnC;AACL,CAAC,CAAA;AAED,MAAM,cAAc,GAAG,CAAC,MAAa,EAAE,OAAc,EAAE,EAAE;IACrD,IAAI,QAAQ,GAAG,CAAC,CAAC;IACjB,IAAG,MAAM,KAAK,EAAE,IAAI,OAAO,KAAK,EAAE,EAAC;QAC/B,QAAQ,GAAG,IAAI,CAAC;KACnB;IACD,IAAG,MAAM,KAAK,EAAE,IAAI,OAAO,KAAK,EAAE,EAAC;QAC/B,QAAQ,GAAG,IAAI,CAAC;KACnB;IACD,IAAG,MAAM,KAAK,EAAE,IAAI,OAAO,KAAK,EAAE,EAAC;QAC/B,QAAQ,GAAG,IAAI,CAAC;KACnB;IACD,IAAG,MAAM,KAAK,EAAE,IAAI,OAAO,KAAK,EAAE,EAAC;QAC/B,QAAQ,GAAG,IAAI,CAAC;KACnB;IACD,IAAG,MAAM,KAAK,EAAE,EAAC;QACb,QAAQ,GAAG,IAAI,CAAC;KACnB;IACD,IAAG,MAAM,KAAK,EAAE,EAAC;QACb,QAAQ,GAAG,IAAI,CAAC;KACnB;IACD,IAAG,MAAM,KAAK,EAAE,EAAC;QACb,QAAQ,GAAG,IAAI,CAAC;KACnB;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC,CAAA;AAGM,MAAM,cAAc,GAAG,CAAC,IAAc,EAAE,EAAE;IAC7C,MAAM,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAC,GAAG,IAAI,CAAC;IAE3C,MAAM,EAAC,cAAc,EAAE,MAAM,EAAC,GAAE,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAE9D,MAAM,QAAQ,GAAG,cAAc,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAEjD,MAAM,KAAK,GAAG,UAAU,CAAC,CAAC,QAAQ,GAAC,cAAc,GAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAEtE,MAAM,aAAa,GAAG,UAAU,CAAC,CAAC,QAAQ,GAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAE7D,OAAO,EAAC,KAAK,EAAE,aAAa,EAAC,CAAC;AAClC,CAAC,CAAA;AAZY,QAAA,cAAc,kBAY1B","sourcesContent":["import { CallData } from \"../interfaces/callInterface\";\n\nconst planCoverageCheck = ( plan:number, time:number) => {\n    let timeDifference = time - plan;\n    if(timeDifference <= 0) return { timeDifference: 0, excess: 1}\n    else {\n    return {timeDifference, excess: 1.1}\n    } \n}\n\nconst definePriceMin = (origin:number, destiny:number) => {\n    let priceMin = 0; \n    if(origin === 11 && destiny === 16){\n        priceMin = 1.90;\n    }\n    if(origin === 11 && destiny === 17){\n        priceMin = 1.70;\n    }\n    if(origin === 11 && destiny === 18){\n        priceMin = 0.90;\n    }\n    if(origin === 11 && destiny === 11){\n        priceMin = 0.90;\n    }\n    if(origin === 16){\n        priceMin = 2.90;\n    }\n    if(origin === 17){\n        priceMin = 2.70;\n    }\n    if(origin === 18){\n        priceMin = 1.90;\n    }\n    return priceMin;\n}\n\n\nexport const calculatePrice = (data: CallData) => {\n    const {origin, destiny, plan, time} = data;\n\n    const {timeDifference, excess}= planCoverageCheck(plan, time);\n\n    const priceMin = definePriceMin(origin, destiny);\n\n    const price = parseFloat((priceMin*timeDifference*excess).toFixed(2));\n\n    const priceWithPlan = parseFloat((priceMin*time).toFixed(2));\n\n    return {price, priceWithPlan};\n}"]}