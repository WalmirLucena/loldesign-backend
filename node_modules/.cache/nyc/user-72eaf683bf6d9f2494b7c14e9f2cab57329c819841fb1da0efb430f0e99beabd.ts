"use strict";function cov_tt89v00nq(){var path="/home/walmir/ProjetosExtras/loldesign-back/src/models/user.ts";var hash="655eaf7ffe81d1c7328838063847084c54990637";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/walmir/ProjetosExtras/loldesign-back/src/models/user.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:20},end:{line:3,column:40}},"2":{start:{line:4,column:11},end:{line:4,column:23}},"3":{start:{line:5,column:16},end:{line:5,column:34}},"4":{start:{line:8,column:0},end:{line:32,column:3}},"5":{start:{line:33,column:0},end:{line:33,column:69}},"6":{start:{line:34,column:0},end:{line:34,column:88}},"7":{start:{line:35,column:0},end:{line:35,column:23}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},f:{},b:{},inputSourceMap:{version:3,file:"/home/walmir/ProjetosExtras/loldesign-back/src/models/user.ts",sources:["/home/walmir/ProjetosExtras/loldesign-back/src/models/user.ts"],names:[],mappings:";;AAAA,yCAA6C;AAC7C,wBAAmB;AACnB,mCAA2B;AAE3B,MAAM,IAAK,SAAQ,iBAAK;CASvB;AAED,IAAI,CAAC,IAAI,CAAC;IACR,EAAE,EAAE;QACF,IAAI,EAAE,qBAAS,CAAC,OAAO;QACvB,SAAS,EAAE,KAAK;QAChB,aAAa,EAAE,IAAI;QACnB,UAAU,EAAE,IAAI;KACjB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACjB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACjB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,qBAAS,CAAC,MAAM;QACtB,SAAS,EAAE,KAAK;KACjB;CACF,EAAE;IACD,SAAS,EAAE,UAAE;IACb,SAAS,EAAE,OAAO;IAClB,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,IAAI;CAClB,CAAC,CAAC;AAEH,IAAI,CAAC,OAAO,CAAC,eAAI,EAAE,EAAC,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,EAAC,CAAC,CAAC;AACxD,eAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,UAAU,EAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAC,OAAO,EAAC,CAAC,CAAA;AAExE,kBAAe,IAAI,CAAC",sourcesContent:["import { Model, DataTypes } from 'sequelize';\nimport db from '.';\nimport Call from './calls';\n\nclass User extends Model {\n  public id?: number;\n\n  public username: string;\n\n  public email: string;\n\n  public password: string;\n\n}\n\nUser.init({\n  id: {\n    type: DataTypes.INTEGER,\n    allowNull: false,\n    autoIncrement: true,\n    primaryKey: true,\n  },\n  username: {\n    type: DataTypes.STRING,\n    allowNull: false,\n  },\n  email: {\n    type: DataTypes.STRING,\n    allowNull: false,\n  },\n  password: {\n    type: DataTypes.STRING,\n    allowNull: false,\n  },\n}, {\n  sequelize: db,\n  modelName: 'users',\n  timestamps: false,\n  underscored: true,\n});\n\nUser.hasMany(Call, {foreignKey: 'userId', as: 'calls'});\nCall.belongsTo(User, {foreignKey:'userId', targetKey: 'id', as:'users'})\n\nexport default User;\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"655eaf7ffe81d1c7328838063847084c54990637"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_tt89v00nq=function(){return actualCoverage;};}return actualCoverage;}cov_tt89v00nq();cov_tt89v00nq().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const sequelize_1=(cov_tt89v00nq().s[1]++,require("sequelize"));const _1=(cov_tt89v00nq().s[2]++,require("."));const calls_1=(cov_tt89v00nq().s[3]++,require("./calls"));class User extends(sequelize_1.Model){}cov_tt89v00nq().s[4]++;User.init({id:{type:sequelize_1.DataTypes.INTEGER,allowNull:false,autoIncrement:true,primaryKey:true},username:{type:sequelize_1.DataTypes.STRING,allowNull:false},email:{type:sequelize_1.DataTypes.STRING,allowNull:false},password:{type:sequelize_1.DataTypes.STRING,allowNull:false}},{sequelize:_1.default,modelName:'users',timestamps:false,underscored:true});cov_tt89v00nq().s[5]++;User.hasMany(calls_1.default,{foreignKey:'userId',as:'calls'});cov_tt89v00nq().s[6]++;calls_1.default.belongsTo(User,{foreignKey:'userId',targetKey:'id',as:'users'});cov_tt89v00nq().s[7]++;exports.default=User;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvd2FsbWlyL1Byb2pldG9zRXh0cmFzL2xvbGRlc2lnbi1iYWNrL3NyYy9tb2RlbHMvdXNlci50cyIsInNvdXJjZXMiOlsiL2hvbWUvd2FsbWlyL1Byb2pldG9zRXh0cmFzL2xvbGRlc2lnbi1iYWNrL3NyYy9tb2RlbHMvdXNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlDQUE2QztBQUM3Qyx3QkFBbUI7QUFDbkIsbUNBQTJCO0FBRTNCLE1BQU0sSUFBSyxTQUFRLGlCQUFLO0NBU3ZCO0FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQztJQUNSLEVBQUUsRUFBRTtRQUNGLElBQUksRUFBRSxxQkFBUyxDQUFDLE9BQU87UUFDdkIsU0FBUyxFQUFFLEtBQUs7UUFDaEIsYUFBYSxFQUFFLElBQUk7UUFDbkIsVUFBVSxFQUFFLElBQUk7S0FDakI7SUFDRCxRQUFRLEVBQUU7UUFDUixJQUFJLEVBQUUscUJBQVMsQ0FBQyxNQUFNO1FBQ3RCLFNBQVMsRUFBRSxLQUFLO0tBQ2pCO0lBQ0QsS0FBSyxFQUFFO1FBQ0wsSUFBSSxFQUFFLHFCQUFTLENBQUMsTUFBTTtRQUN0QixTQUFTLEVBQUUsS0FBSztLQUNqQjtJQUNELFFBQVEsRUFBRTtRQUNSLElBQUksRUFBRSxxQkFBUyxDQUFDLE1BQU07UUFDdEIsU0FBUyxFQUFFLEtBQUs7S0FDakI7Q0FDRixFQUFFO0lBQ0QsU0FBUyxFQUFFLFVBQUU7SUFDYixTQUFTLEVBQUUsT0FBTztJQUNsQixVQUFVLEVBQUUsS0FBSztJQUNqQixXQUFXLEVBQUUsSUFBSTtDQUNsQixDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsT0FBTyxDQUFDLGVBQUksRUFBRSxFQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUM7QUFDeEQsZUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsRUFBQyxVQUFVLEVBQUMsUUFBUSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDLE9BQU8sRUFBQyxDQUFDLENBQUE7QUFFeEUsa0JBQWUsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kZWwsIERhdGFUeXBlcyB9IGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgZGIgZnJvbSAnLic7XG5pbXBvcnQgQ2FsbCBmcm9tICcuL2NhbGxzJztcblxuY2xhc3MgVXNlciBleHRlbmRzIE1vZGVsIHtcbiAgcHVibGljIGlkPzogbnVtYmVyO1xuXG4gIHB1YmxpYyB1c2VybmFtZTogc3RyaW5nO1xuXG4gIHB1YmxpYyBlbWFpbDogc3RyaW5nO1xuXG4gIHB1YmxpYyBwYXNzd29yZDogc3RyaW5nO1xuXG59XG5cblVzZXIuaW5pdCh7XG4gIGlkOiB7XG4gICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICBhdXRvSW5jcmVtZW50OiB0cnVlLFxuICAgIHByaW1hcnlLZXk6IHRydWUsXG4gIH0sXG4gIHVzZXJuYW1lOiB7XG4gICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBhbGxvd051bGw6IGZhbHNlLFxuICB9LFxuICBlbWFpbDoge1xuICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgfSxcbiAgcGFzc3dvcmQ6IHtcbiAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGFsbG93TnVsbDogZmFsc2UsXG4gIH0sXG59LCB7XG4gIHNlcXVlbGl6ZTogZGIsXG4gIG1vZGVsTmFtZTogJ3VzZXJzJyxcbiAgdGltZXN0YW1wczogZmFsc2UsXG4gIHVuZGVyc2NvcmVkOiB0cnVlLFxufSk7XG5cblVzZXIuaGFzTWFueShDYWxsLCB7Zm9yZWlnbktleTogJ3VzZXJJZCcsIGFzOiAnY2FsbHMnfSk7XG5DYWxsLmJlbG9uZ3NUbyhVc2VyLCB7Zm9yZWlnbktleTondXNlcklkJywgdGFyZ2V0S2V5OiAnaWQnLCBhczondXNlcnMnfSlcblxuZXhwb3J0IGRlZmF1bHQgVXNlcjtcbiJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IjgyRkF1QlE7eUtBdkJSLGdFQUNBLCtDQUNBLDBEQUVBLEtBQU1BLEtBQU4sU0FBbUJDLGlCQUFuQixDQUF3QixFLHVCQVd4QkQsSUFBSSxDQUFDRSxJQUFMLENBQVUsQ0FDUkMsRUFBRSxDQUFFLENBQ0ZDLElBQUksQ0FBRUgsc0JBQVVJLE9BRGQsQ0FFRkMsU0FBUyxDQUFFLEtBRlQsQ0FHRkMsYUFBYSxDQUFFLElBSGIsQ0FJRkMsVUFBVSxDQUFFLElBSlYsQ0FESSxDQU9SQyxRQUFRLENBQUUsQ0FDUkwsSUFBSSxDQUFFSCxzQkFBVVMsTUFEUixDQUVSSixTQUFTLENBQUUsS0FGSCxDQVBGLENBV1JLLEtBQUssQ0FBRSxDQUNMUCxJQUFJLENBQUVILHNCQUFVUyxNQURYLENBRUxKLFNBQVMsQ0FBRSxLQUZOLENBWEMsQ0FlUk0sUUFBUSxDQUFFLENBQ1JSLElBQUksQ0FBRUgsc0JBQVVTLE1BRFIsQ0FFUkosU0FBUyxDQUFFLEtBRkgsQ0FmRixDQUFWLENBbUJHLENBQ0RPLFNBQVMsQ0FBRUMsVUFEVixDQUVEQyxTQUFTLENBQUUsT0FGVixDQUdEQyxVQUFVLENBQUUsS0FIWCxDQUlEQyxXQUFXLENBQUUsSUFKWixDQW5CSCxFLHVCQTBCQWpCLElBQUksQ0FBQ2tCLE9BQUwsQ0FBYUMsZUFBYixDQUFtQixDQUFDQyxVQUFVLENBQUUsUUFBYixDQUF1QkMsRUFBRSxDQUFFLE9BQTNCLENBQW5CLEUsdUJBQ0FGLGdCQUFLRyxTQUFMLENBQWV0QixJQUFmLENBQXFCLENBQUNvQixVQUFVLENBQUMsUUFBWixDQUFzQkcsU0FBUyxDQUFFLElBQWpDLENBQXVDRixFQUFFLENBQUMsT0FBMUMsQ0FBckIsRSx1QkFFQUcsZ0JBQWV4QixJQUFmIiwibmFtZXMiOlsiVXNlciIsInNlcXVlbGl6ZV8xIiwiaW5pdCIsImlkIiwidHlwZSIsIklOVEVHRVIiLCJhbGxvd051bGwiLCJhdXRvSW5jcmVtZW50IiwicHJpbWFyeUtleSIsInVzZXJuYW1lIiwiU1RSSU5HIiwiZW1haWwiLCJwYXNzd29yZCIsInNlcXVlbGl6ZSIsIl8xIiwibW9kZWxOYW1lIiwidGltZXN0YW1wcyIsInVuZGVyc2NvcmVkIiwiaGFzTWFueSIsImNhbGxzXzEiLCJmb3JlaWduS2V5IiwiYXMiLCJiZWxvbmdzVG8iLCJ0YXJnZXRLZXkiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL2hvbWUvd2FsbWlyL1Byb2pldG9zRXh0cmFzL2xvbGRlc2lnbi1iYWNrL3NyYy9tb2RlbHMvdXNlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2RlbCwgRGF0YVR5cGVzIH0gZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCBkYiBmcm9tICcuJztcbmltcG9ydCBDYWxsIGZyb20gJy4vY2FsbHMnO1xuXG5jbGFzcyBVc2VyIGV4dGVuZHMgTW9kZWwge1xuICBwdWJsaWMgaWQ/OiBudW1iZXI7XG5cbiAgcHVibGljIHVzZXJuYW1lOiBzdHJpbmc7XG5cbiAgcHVibGljIGVtYWlsOiBzdHJpbmc7XG5cbiAgcHVibGljIHBhc3N3b3JkOiBzdHJpbmc7XG5cbn1cblxuVXNlci5pbml0KHtcbiAgaWQ6IHtcbiAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgIGF1dG9JbmNyZW1lbnQ6IHRydWUsXG4gICAgcHJpbWFyeUtleTogdHJ1ZSxcbiAgfSxcbiAgdXNlcm5hbWU6IHtcbiAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGFsbG93TnVsbDogZmFsc2UsXG4gIH0sXG4gIGVtYWlsOiB7XG4gICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBhbGxvd051bGw6IGZhbHNlLFxuICB9LFxuICBwYXNzd29yZDoge1xuICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgfSxcbn0sIHtcbiAgc2VxdWVsaXplOiBkYixcbiAgbW9kZWxOYW1lOiAndXNlcnMnLFxuICB0aW1lc3RhbXBzOiBmYWxzZSxcbiAgdW5kZXJzY29yZWQ6IHRydWUsXG59KTtcblxuVXNlci5oYXNNYW55KENhbGwsIHtmb3JlaWduS2V5OiAndXNlcklkJywgYXM6ICdjYWxscyd9KTtcbkNhbGwuYmVsb25nc1RvKFVzZXIsIHtmb3JlaWduS2V5Oid1c2VySWQnLCB0YXJnZXRLZXk6ICdpZCcsIGFzOid1c2Vycyd9KVxuXG5leHBvcnQgZGVmYXVsdCBVc2VyO1xuIl19